#HDI analysys
```{r}
library(readr)
library(dplyr)
library(tidyr)
#leggo dataset da locale
HDI_dataset <- read_csv("C:/Users/39388/Downloads/human-development-indexx.csv",
                        col_types = cols(Year = col_double(),
                                         `Human Development Index` = col_double(),
                                         Entity = col_character(),
                                         Code = col_character()))
names(HDI_dataset)[4] <- "Human_Development_Index"
#sistemo il dataset per l'analisi
HDI_dataset <- HDI_dataset %>%
  filter(Year >= 2000) %>%
  group_by(Entity, Year) %>%
  summarize(Human_Development_Index = mean(`Human_Development_Index`, na.rm = TRUE)) %>%
  pivot_wider(names_from = Year, values_from = Human_Development_Index)

head(HDI_dataset)
```
##Cluster
```{r}
require(cluster)
require(factoextra)
HDI_cluster <- HDI_dataset %>% 
  select(`2000`:`2021`)
HDI_cluster=na.omit(HDI_cluster)
HDI_dataset=na.omit(HDI_dataset)
set.seed(123)
HDI_cluster <- HDI_cluster[,2:23]
k <- 5 # Numero di cluster da esplorare
sil <- silhouette(kmeans(HDI_cluster, k)$cluster, dist(HDI_cluster))
plot(sil)

# Esegui l'analisi cluster con il metodo di clustering gerarchico
HDI_cluster_dist <- dist(HDI_cluster, method = "euclidean")
HDI_cluster_hclust <- hclust(HDI_cluster_dist, method = "ward.D2")
HDI_cluster_groups <- cutree(HDI_cluster_hclust, k = k)

HDI_cluster_final <- cbind(HDI_dataset, Group = HDI_cluster_groups)

```

```{r}
# Visualizza il dendrogramma
fviz_dend(HDI_cluster_hclust, k = k)

# Visualizza i cluster in uno spazio bidimensionale
HDI_pca <- prcomp(HDI_cluster)
fviz_cluster(list(data = HDI_pca$x[,1:2], cluster = HDI_cluster_groups), 
             geom = "point", 
             palette = "jco",
             ggtheme = theme_classic()) + 
  ggtitle("Clustering gerarchico (Ward.D2) dei paesi") + 
  theme(plot.title = element_text(hjust = 0.5))
```
```{r}
#aggiungo le info ottenute dal cluster al dataset
HDI_means <- rowMeans(HDI_dataset[, 2:(ncol(HDI_dataset)-1)], na.rm = TRUE)
HDI_dataset_with_means <- cbind(HDI_cluster_final, HDI_means)
names(HDI_dataset_with_means)[ncol(HDI_dataset_with_means)] <- "media"
HDI_group_means <- HDI_dataset_with_means %>%
  group_by(Group) %>%
  summarize(mean_media = mean(media, na.rm = TRUE))
HDI_group_rank <- HDI_group_means %>%
  mutate(rank = min_rank(mean_media)) %>%
  arrange(mean_media)
HDI_clusters_df_labed <- HDI_cluster_final %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo
                         . == 2 ~ "PMR", #paesi medio reddito
                         . == 3 ~ "PVS", #paesi in via di sviluppo
                         . == 4 ~ "PSA", #paesi sviluppo avanzato
                         . == 5 ~ "PE", #paesi emergenti
                         TRUE ~ as.character(.)))
```

```{r}

# Utilizza la funzione unique() per ottenere l'elenco dei gruppi presenti nel dataset
elenco_gruppi <- unique(HDI_clusters_df_labed$Group)
HDI_clusters_df_labed[, -c(1, 24)] <- sapply(HDI_clusters_df_labed[, -c(1, 24)], as.numeric)
HDI_clusters_df_labed$MediaRiga <- rowMeans(HDI_clusters_df_labed[, -c(1, 24)])
#stampo l'elenco dei paesi per ogni gruppo, calcolo la media del valore HDI per paese e per gruppo
for (gruppo in elenco_gruppi) {
  paesi <- HDI_clusters_df_labed$Entity[HDI_clusters_df_labed$Group == gruppo]
  cat("Gruppo:", gruppo, "\n")
  cat("Paesi:", paste(paesi, collapse = ", "), "\n\n")
  
  for (paese in paesi) {
    media_valori <- mean(HDI_clusters_df_labed$MediaRiga[HDI_clusters_df_labed$Group == gruppo & HDI_clusters_df_labed$Entity == paese])
    cat("Paese:", paese, "- Media della riga:", media_valori, "\n")
  }
  
  media_valori_gruppo <- mean(HDI_clusters_df_labed$MediaRiga[HDI_clusters_df_labed$Group == gruppo])
  cat("Media dei valori per gruppo:", media_valori_gruppo, "\n\n")
}
```

##grafico generale
andamento di ogni paese anno per anno divisi in gruppi
```{r}

# Trasforma il dataframe in formato "long"
HDI_cluster_final_long <- gather(HDI_cluster_final, key = "anno", value = "valore", -c("Entity", "Group"))

HDI_cluster_final_long$anno <- as.numeric(HDI_cluster_final_long$anno)

# Crea il grafico utilizzando la colonna "anno" come asse x
ggplot(HDI_cluster_final_long, aes(x = anno, y = valore, color = factor(Group), label = Entity)) +
  geom_point() +
  geom_text(nudge_x = 0.02, nudge_y = 0.02) +
  labs(title = "Analisi Cluster dell'HDI per Paese",
       x = "Anno",
       y = "Valore dell'HDI",
       color = "Gruppo") +
  scale_color_discrete(name = "Gruppo", labels = c("Gruppo 1", "Gruppo 2", "Gruppo 3", "Gruppo 4", "Gruppo 5")) +
  theme_bw()
```
###grafico annuale

```{r}
library(ggplot2)
library(dplyr)

# Filtra le righe per l'anno 2001
HDI_cluster_final_2006 <- HDI_cluster_final_long %>% 
  filter(anno == 2001)

# Crea il grafico utilizzando la colonna "Entity" come etichetta sull'asse x
ggplot(HDI_cluster_final_2006, aes(x = Entity, y = valore, color = factor(Group))) +
  geom_point() +
  labs(title = "Analisi Cluster dell'HDI per Paese (anno 2001)",
       x = "Paese",
       y = "Valore dell'HDI",
       color = "Gruppo") +
  scale_color_discrete(name = "Gruppo", labels = c("Gruppo 1", "Gruppo 2", "Gruppo 3", "Gruppo 4", "Gruppo 5")) +
  coord_flip() +
  theme_bw()
```
##Cluster per ogni annata
```{r}
library(cluster)
library(factoextra)
library(dplyr)

# Inizializza una lista per memorizzare i risultati del clustering per ogni anno
HDI_clusters_list <- list()

# Itera sui diversi anni
for (i in 2:ncol(HDI_dataset)) {
  # Seleziona solo l'anno corrente dal dataset HDI_dataset
  HDI_cluster <- HDI_dataset %>% 
    select(all_of(c("Entity", colnames(HDI_dataset)[i]))) %>%
    na.omit()

  # Applica il clustering K-means
  set.seed(123)
  k <- 5 # Numero di cluster da esplorare
  sil <- silhouette(kmeans(HDI_cluster[, colnames(HDI_dataset)[i]], k)$cluster, dist(HDI_cluster[, colnames(HDI_dataset)[i]]))

  # Esegui l'analisi cluster con il metodo di clustering gerarchico
  HDI_cluster_dist <- dist(HDI_cluster[, colnames(HDI_dataset)[i]], method = "euclidean")
  HDI_cluster_hclust <- hclust(HDI_cluster_dist, method = "ward.D2")
  # Suddividi i paesi in 5 gruppi
  HDI_cluster_groups <- cutree(HDI_cluster_hclust, k = k)
  
  HDI_cluster_final <- cbind(HDI_cluster, Group = HDI_cluster_groups)
  
  # Visualizza il dendrogramma
  fviz_dend(HDI_cluster_hclust, k = k)
  
  # Aggiungi la media dell'HDI per ogni paese e il ranking dei gruppi
  HDI_means <- HDI_cluster_final[, colnames(HDI_dataset)[i]]
  HDI_dataset_with_means <- cbind(HDI_cluster_final[,c(1,3)], HDI_means)
  HDI_group_means <- HDI_dataset_with_means %>%
    group_by(Group) %>%
    summarize(mean_media = mean(col(HDI_dataset)[i], na.rm = TRUE))
  HDI_group_rank <- HDI_group_means %>%
    mutate(rank = min_rank(mean_media)) %>%
    arrange(mean_media)
  HDI_clusters_df_labed <- HDI_cluster_final 
  
  HDI_clusters_df_labed <- HDI_clusters_df_labed %>% 
    rename(New_Col_Name = colnames(HDI_clusters_df_labed)[2])
  
  HDI_clusters_list <- append(HDI_clusters_list, list(HDI_clusters_df_labed))
}

HDI_clusters_list


```
per ogni annata creo un cluster, assegnano ad ogni cluster formato la categoria corrispondente in base al valore di HDI
```{r}

HDI_clusters_list[[1]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo(R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PMR", #paesi medio reddito (R3)
                         . == 4 ~ "PSA", #paesi sviluppo avanzato(R5)
                         . == 5 ~ "PE", #paesi emergenti(R2)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[2]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 4 ~ "PE", #paesi emergenti (R2)
                         . == 5 ~ "PMR", #paesi medio reddito (R3)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[3]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 4 ~ "PMR", #paesi medio reddito (R3)
                         . == 5 ~ "PE", #paesi emergenti (R2)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[4]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 4 ~ "PE", #paesi emergenti (R2)
                         . == 5 ~ "PMR", #paesi medio reddito (R3)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[5]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 4 ~ "PE", #paesi emergenti (R2)
                         . == 5 ~ "PMR", #paesi medio reddito (R3)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[6]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 4 ~ "PE", #paesi emergenti (R2)
                         . == 5 ~ "PMR", #paesi medio reddito (R3)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[7]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PE", #paesi emergenti (R2)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 4 ~ "PMR", #paesi medio reddito (R3)
                         . == 5 ~ "PLS", #paesi lento sviluppo (R1)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[8]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 4 ~ "PE", #paesi emergenti (R2)
                         . == 5 ~ "PMR", #paesi medio reddito (R3)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[9]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PMR", #paesi medio reddito (R3)
                         . == 3 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 4 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 5 ~ "PE", #paesi emergenti (R2)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[10]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PMR", #paesi medio reddito (R3)
                         . == 3 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 4 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 5 ~ "PE", #paesi emergenti (R2)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[11]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PMR", #paesi medio reddito (R3)
                         . == 3 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 4 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 5 ~ "PE", #paesi emergenti (R2)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[12]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PE", #paesi emergenti (R2)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 4 ~ "PMR", #paesi medio reddito (R3)
                         . == 5 ~ "PLS", #paesi lento sviluppo (R1)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[13]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PE", #paesi emergenti (R2)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PMR", #paesi medio reddito (R3)
                         . == 4 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 5 ~ "PLS", #paesi lento sviluppo (R1)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[14]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PMR", #paesi medio reddito (R3)
                         . == 3 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 4 ~ "PE", #paesi emergenti (R2)
                         . == 5 ~ "PSA", #paesi sviluppo avanzato (R5)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[15]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PMR", #paesi medio reddito (R3)
                         . == 4 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 5 ~ "PE", #paesi emergenti (R2)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[16]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 4 ~ "PE", #paesi emergenti (R2)
                         . == 5 ~ "PMR", #paesi medio reddito (R3)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[17]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PMR", #paesi medio reddito (R3)
                         . == 4 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 5 ~ "PE", #paesi emergenti (R2)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[18]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PMR", #paesi medio reddito (R3)
                         . == 4 ~ "PE", #paesi emergenti (R2)
                         . == 5 ~ "PSA", #paesi sviluppo avanzato (R5)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[19]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PMR", #paesi medio reddito (R3)
                         . == 4 ~ "PE", #paesi emergenti (R2)
                         . == 5 ~ "PSA", #paesi sviluppo avanzato (R5)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[20]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PMR", #paesi medio reddito (R3)
                         . == 4 ~ "PE", #paesi emergenti (R2)
                         . == 5 ~ "PSA", #paesi sviluppo avanzato (R5)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[21]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PMR", #paesi medio reddito (R3)
                         . == 4 ~ "PE", #paesi emergenti (R2)
                         . == 5 ~ "PSA", #paesi sviluppo avanzato (R5)
                         TRUE ~ as.character(.)))
HDI_clusters_list[[22]] %>% 
  mutate_all(~ case_when(. == 1 ~ "PLS", #paesi lento sviluppo (R1)
                         . == 2 ~ "PVS", #paesi in via di sviluppo (R4)
                         . == 3 ~ "PMR", #paesi medio reddito (R3)
                         . == 4 ~ "PSA", #paesi sviluppo avanzato (R5)
                         . == 5 ~ "PE", #paesi emergenti (R2)
                         TRUE ~ as.character(.)))
```

```{r}
library(dplyr)

HDI_clusters_combined <- bind_cols(HDI_clusters_list)

HDI_clusters_combined <- HDI_clusters_combined %>%
  select(-c(4,7,10,13,16,19,22,25,28,31,34,37,40,43,46,49,52,55,58,61,64))

new_names <- paste0(2000:2021)

names(HDI_clusters_combined)[grep("^Group", names(HDI_clusters_combined))] <- paste0( 2000:2021)
HDI_clusters_combined <- HDI_clusters_combined %>%
  select(-starts_with("New_Col_Name"))
HDI_clusters_combined_num <- HDI_clusters_combined%>% 
  rename_with(~ "Country", 1)

```
###Anomaly Detection HDI
```{r}
library(tidyr)
library(dplyr)

# Trasforma il dataframe in formato lungo
HDI_clusters_combined_long <- HDI_clusters_combined_num %>% 
  pivot_longer(cols = -Country, names_to = "year", values_to = "value") %>% 
  arrange(Country, year)

# Raggruppa le righe per "Country"
HDI_clusters_combined_grouped <- HDI_clusters_combined_long %>% 
  group_by(Country)

HDI_clusters_combined_diff <- HDI_clusters_combined_grouped %>% 
  mutate(diff = value - lag(value)) %>% 
  select(-value) %>% 
  ungroup()
HDI_clusters_combined_wide <- HDI_clusters_combined_diff %>% 
  pivot_wider(names_from = year, values_from = diff) %>% 
  select(Country, everything())
HDI_clusters_combined_wide <- HDI_clusters_combined_wide %>% 
  mutate_all(~ replace(., . == 0, NA))
View(HDI_clusters_combined_wide)

HDI_clusters_combined_wide_fin <- HDI_clusters_combined_wide %>% 
  mutate_all(~ifelse(. %in% c(3, 4, -3, -4),NA, .))

library(openxlsx)
write.xlsx(HDI_clusters_combined_wide_fin, "HDI_clusters_combined_wide_finale.xlsx", rowNames = FALSE)
